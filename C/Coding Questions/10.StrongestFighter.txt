Problem Name: Strongest Fighter
Problem Difficulty: 
Problem Constraints: 1<=N<=10^7 <br>
1<=k<=N <br>
1 <= A<sub>i</sub> <= 100000
Problem Description:
There is a group of MMA fighters standing together in a line.
Given the value of their strengths, find the strength of the strongest fighter in continuous sub-groups of size k.
Input Format: First line contains an integer N, the number of fighters
Followed by N integers where i'th integer denotes the strength of i'th fighter.
Next line contains the size of sub-group k
Sample Input: 5
1 3 1 4 5
3
Output Format: Space separated integers in a single line denoting strength of strongest fighters in the groups.
Sample Output: 3 4 5



=====Solution=====
#include<iostream>
#include<deque>
using namespace std;

int arr[10000005];
int main() {
    deque<int> dq;
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
        cin>>arr[i];
    int k;
    cin>>k;
    int mx=0;
    for(int i=0;i<k;i++){
        if(dq.empty())
            dq.push_front(i);
        else{
            while(!dq.empty()&&arr[i]>arr[dq.back()])
                    dq.pop_back();
            dq.push_back(i);
        }
    }
    cout<<arr[dq.front()]<<" ";
    for(int i=k;i<n;i++){
        if(dq.front()<=i-k)
            dq.pop_front();
        while(!dq.empty()&&arr[i]>arr[dq.back()])
                dq.pop_back();
        dq.push_back(i);
        cout<<arr[dq.front()]<<" ";
    }
	return 0;
}
